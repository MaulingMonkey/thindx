(function() {var implementors = {};
implementors["thindx"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"thindx/d3d/perf/struct.EventMismatchError.html\" title=\"struct thindx::d3d::perf::EventMismatchError\">EventMismatchError</a>","synthetic":false,"types":["thindx::d3d9_h::functions::perf::EventMismatchError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"thindx/d3d/struct.CompileError.html\" title=\"struct thindx::d3d::CompileError\">CompileError</a>","synthetic":false,"types":["thindx::d3dcompiler_h::dll::compile_::CompileError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"thindx/d3d/struct.PreprocessError.html\" title=\"struct thindx::d3d::PreprocessError\">PreprocessError</a>","synthetic":false,"types":["thindx::d3dcompiler_h::dll::compile_::PreprocessError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"thindx/struct.ErrorKind.html\" title=\"struct thindx::ErrorKind\">ErrorKind</a>","synthetic":false,"types":["thindx::error_kind::ErrorKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"thindx/struct.ErrorWithBlob.html\" title=\"struct thindx::ErrorWithBlob\">ErrorWithBlob</a>","synthetic":false,"types":["thindx::error_with_blob::ErrorWithBlob"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"thindx/struct.Error.html\" title=\"struct thindx::Error\">Error</a>","synthetic":false,"types":["thindx::error::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()